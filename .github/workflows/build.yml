name: Wheels

on:
  push:
  workflow_dispatch:
  release:
    types:
      - published
env:
  CIBW_TEST_EXTRAS: test
  CIBW_TEST_COMMAND: pytest {project}/tests
  CIBW_BUILD_VERBOSITY: 1
  # Optional: support Universal2 for Apple Silicon with these two lines:
  CIBW_ARCHS_MACOS: auto universal2
  CIBW_TEST_SKIP: "*universal2:arm64"

jobs:
  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Build SDist
        run: pipx run --spec build pyproject-build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  macoswheels:
    name: Wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ macos-latest ]
        py: [ 37, 38, 39 ]

    env:
      CIBW_BUILD: ${{ matrix.py }}-*
#      CIBW_BEFORE_BUILD: yum install swig && yum install gcc-gfortran


    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.py }}
          environment-file: environment.yml
          activate-environment: pyopy-env
          miniforge-version: latest
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_SKIP: pp* cp27-win*


      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  linuxwheels:
    name: Wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest]
        py: [ cp37, cp38, cp39 ]
    env:
      CIBW_BUILD: ${{ matrix.py }}-*
      CIBW_BEFORE_BUILD: yum install swig && yum install gcc-gfortran

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_SKIP: pp* cp27-win*


      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  upload_all:
    needs: [linuxwheels, macoswheels, make_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
